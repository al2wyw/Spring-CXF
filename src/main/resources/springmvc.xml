<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
       >
       
	<context:component-scan base-package="xpadro.tutorial.rest"/>
	
	<!-- Detects MVC annotations like @RequestMapping -->
	<mvc:annotation-driven/>

	<!-- store the locale in the session -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">  
	    <property name="defaultLocale" value="en" />  
	</bean>
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
	    <property name="basenames">  
	        <list>  
	            <value>classpath:Message</value>  
	        </list>  
	    </property>  
	</bean>
	<mvc:interceptors>
		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">  
			<property name="paramName" value="siteLanguage"/>  
		</bean> 
	</mvc:interceptors>
	
	
	<!-- freemarker的配置 -->  
    <bean id="freemarkerConfigurer"  
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
        <property name="templateLoaderPath" value="/WEB-INF/freemarker/" />  
        <property name="defaultEncoding" value="UTF-8" />  
        <property name="freemarkerSettings">  
            <props>  
                <prop key="template_update_delay">10</prop>  
                <prop key="locale">en_US</prop>  
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>  
                <prop key="date_format">yyyy-MM-dd</prop>  
                <prop key="number_format">#.##</prop>  
            </props>  
        </property>  
    </bean>  
    <!-- FreeMarker view -->  
    <bean id="viewResolver"  
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
        <property name="viewClass"  
            value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />  
        <property name="suffix" value=".html" />  
        <property name="contentType" value="text/html;charset=UTF-8" />  
        <property name="exposeRequestAttributes" value="true" />  
        <property name="exposeSessionAttributes" value="true" />  
        <property name="exposeSpringMacroHelpers" value="true" />  
        <property name="allowSessionOverride" value="true"/>  
    </bean> 
		
    <bean id="internalview" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    	 <property name="prefix" value="/"/>
    	<property name="suffix" value=".jsp"/>
    	<property name="contentType" value="text/html;charset=UTF-8" /> 
    </bean> 
    
    <!-- properties & placeholder -->
    <bean id="placeholderconfig"
		class="xpadro.tutorial.rest.config.MyPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:*.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="propertiesReader"
  		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	  <property name="locations">
	   <list>
	    <value>classpath:*.properties</value>
	   </list>
	  </property>
	</bean> 
	
	<bean id="placeholderConfigBean" class="xpadro.tutorial.rest.model.PlaceholderConfigBean">
		<property name="test" value="${testfucktest}"/>
	</bean>
	<bean id="props" class="java.util.HashMap">  
	    <constructor-arg index="0">  
	       <map>  
	          <entry key="abc" value="234"/>  
	       </map>  
	    </constructor-arg>  
	</bean> 
	
	<bean id="profileBean" class="xpadro.tutorial.rest.util.PerformanceLogAspect"/>
	<aop:config>
		<aop:aspect ref="profileBean">
			<!-- false -->
			<aop:around method="profile" pointcut="execution(* xpadro.tutorial.rest.repository..*+.*(..))"/>
		</aop:aspect>
	</aop:config>
	
    <!-- database setting -->
	 <bean id="dbcpDataSource" abstract="true">
             <property name="maxActive" value="100" />
             <property name="initialSize" value="1" />
             <property name="maxWait" value="60000" />
             <property name="maxIdle" value="100" />
             <property name="minIdle" value="3" />
             <property name="removeAbandoned" value="true" />
             <property name="removeAbandonedTimeout" value="180" />
             
             <!-- validation query to validate the connection -->
             <property name="validationQuery" value="select 1"/>
             <property name="validationQueryTimeout" value="10"/>
             
             <!-- test the idle connection with the evictors, the start time and the interval -->
             <property name="testWhileIdle" value="true"/>
             <property name="minEvictableIdleTimeMillis" value="60000"/>
             <property name="timeBetweenEvictionRunsMillis" value="60000"/>
     </bean>
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" parent="dbcpDataSource">
         <property name="driverClassName" value="${jdbc.class}" />
         <property name="url" value="${jdbc.url}" />
         <property name="username" value="${jdbc.username}" />
         <property name="password" value="${jdbc.password}" />
    </bean>
	
	<!-- transaction manager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven/> <!-- internalTransactionAdvisor -->

	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:xpadro/tutorial/rest/repository/mybatis/*Mapper.xml" />
	</bean>
	<!-- alternative to use  MapperFactoryBean to generate the mapper bean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="xpadro.tutorial.rest.repository.mybatis" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

</beans>